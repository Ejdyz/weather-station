/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\src\components\Models\finalWeb.glb
*/
"use client"
import React, {useLayoutEffect, useRef} from 'react'
import {useGLTF, useScroll} from '@react-three/drei'
import {useFrame} from "@react-three/fiber";
import {gsap} from "gsap";

export function Station(props) {
  const { nodes, materials } = useGLTF('./models/finalWeb.glb')

  const ref = useRef()
  const tl = useRef()

  const scroll = useScroll()
  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration())
  })

  useLayoutEffect(() => {
    tl.current = gsap.timeline()

    tl.current
      .to(ref.current.rotation, { x: Math.PI / 10, y:-Math.PI/3, duration: 1 }) // Rotate the object
      .to(ref.current.position, { y: 1, x: 3, duration: 1 }, '-=1')// Move the object

      .to(ref.current.rotation, { y: Math.PI/3, duration: 2 })
      .to(ref.current.position, { y: 0, x: -3, duration: 2 }, '-=2') // Move the object further


      .to(ref.current.rotation, { y: 0, duration: 1 })
      .to(ref.current.position, { y: 0, x: 0, duration: 1 }, '-=1') // Move the object back to original position
      .to(ref.current.rotation, { x: 0, duration: 1 }, '-=1'); // Reset rotation

  }, []);

  return (
    <group name="Station" {...props} dispose={null} ref={ref} >
      <mesh geometry={nodes.Bottom.geometry} material={materials.Black3DPlast} position={[0, 0, 0]} scale={0.1} />
      <mesh geometry={nodes.TopRoof.geometry} material={materials.White3DPrint} position={[0, 0, 0]} scale={0.1} />
      <mesh geometry={nodes.MiddleRoof.geometry} material={materials.White3DPrint} position={[0, 0, 0]} scale={0.1} />
      <mesh geometry={nodes.BottomRoof.geometry} material={materials.White3DPrint} position={[0, 0, 0]} scale={0.1} />
      <group position={[0, 0, 0]} scale={[50, 20, 50]}>
        <mesh geometry={nodes.Cube001.geometry} material={materials.Silver} />
        <mesh geometry={nodes.Cube001_1.geometry} material={materials.Black3DPlast} />
        <mesh geometry={nodes.Cube001_2.geometry} material={materials.BlackPlast} />
        <mesh geometry={nodes.Cube001_3.geometry} material={materials.SilverIshGold} />
      </group>
      <mesh geometry={nodes.Legs.geometry} material={materials.Black3DPlast} position={[0, 0, 0]} scale={0.1} />
    </group>
  )
}

useGLTF.preload('./models/finalWeb.glb')
